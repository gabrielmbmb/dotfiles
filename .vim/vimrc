"""""""""""""""""""""""""""""
" if vim-plug is not installed, install it.
"""""""""""""""""""""""""""""
if empty(glob('~/.vim/autoload/plug.vim'))
	silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
				\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

"""""""""""""""""""""""""""""
" plugin section
"""""""""""""""""""""""""""""
call plug#begin('~/.vim/plugged')

" Status line
Plug 'vim-airline/vim-airline'

" Unix file operations inside vim
Plug 'tpope/vim-eunuch'

" surround region (brackets, quotes)
Plug 'tpope/vim-surround'

" Git
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" Comments
Plug 'preservim/nerdcommenter'

" Autoformat
Plug 'Chiel92/vim-autoformat'

" Prettier
Plug 'prettier/vim-prettier', {
			\ 'do': 'npm install',
			\ 'for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'markdown', 'vue', 'yaml', 'html']}

" YouCompleteMe
Plug 'Valloric/YouCompleteMe', { 'do': './install.py --ts-completer' }

" Nerdtree
Plug 'preservim/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'

" Icons
Plug 'ryanoasis/vim-devicons'

" Snippets Engine
Plug 'SirVer/ultisnips'

" Snippets
Plug 'honza/vim-snippets'

" Syntax checking
Plug 'vim-syntastic/syntastic'

" Focus gained
Plug 'tmux-plugins/vim-tmux-focus-events'

" Go
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

" Python
Plug 'nvie/vim-flake8'
Plug 'psf/black'
Plug 'jmcantrell/vim-virtualenv'

" Vue
Plug 'posva/vim-vue'
Plug 'digitaltoad/vim-pug'

" HTML
Plug 'alvan/vim-closetag'

" tmux integration
Plug 'christoomey/vim-tmux-navigator'

" Theme
Plug 'hzchirs/vim-material'

call plug#end()

" encoding
set encoding=UTF-8

" lightline config
set laststatus=2

" indent tabbing etc
set tabstop=4
set expandtab
set shiftwidth=4
set autoindent
set smartindent

" show line number
set number

" Set viminfo path
set viminfo+=n~/.vim/viminfo

" set backspace to 2
set backspace=2

" copy & paste to system clipboard
set clipboard^=unnamed

" Line numbers
set number relativenumber
set nu rnu

"""""""""""""""""""""""""""""
" Autoclose
"""""""""""""""""""""""""""""
source ~/.vim/autoclose.vim

"""""""""""""""""""""""""""""
" Theme
"""""""""""""""""""""""""""""
if exists('+termguicolors')
	let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
	let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
	set termguicolors
endif
let g:material_style='oceanic'
set background=dark
colorscheme vim-material
let g:airline_theme='material'
hi ColorColumn ctermbg=75 guibg=#82AAFF
"""""""""""""""""""""""""""""
" Airline
"""""""""""""""""""""""""""""
let g:airline_powerline_fonts=1
"""""""""""""""""""""""""""""
" YouCompleteMe
"""""""""""""""""""""""""""""
let g:ycm_semantic_triggers = {
			\	'python': ['re!\w{2}']
			\ }
"hi Pmenu ctermfg=0 ctermbg=130 guifg=#000000 guibg=#af5f00

" vim-latex-live-preview-settings
autocmd Filetype tex setl updatetime=1
let g:livepreview_previewer = 'okular'

"""""""""""""""""""""""""""""
" HTML Autoclose
"""""""""""""""""""""""""""""
let g:closetag_filenames = "*.html, *.xhtml, *.xml, *.vue, *.js, *.jsx"

"""""""""""""""""""""""""""""
" UltiSnips Trigger Config
"""""""""""""""""""""""""""""
let g:UltiSnipsExpandTrigger="<C-j>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" Set .tex file as latex (default is plaintex)
let g:tex_flavor = 'latex'

"""""""""""""""""""""""""""""
" Syntastic
"""""""""""""""""""""""""""""
let g:syntastic_always_populate_loc_list=1
let g:syntastic_loc_list_height=5
let g:syntastic_auto_loc_list=0
let g:syntastic_check_on_open=1
let g:syntastic_check_on_wq=1

let g:syntastic_error_symbol=''
let g:syntastic_warning_symbol=''
"""""""""""""""""""""""""""""
" Prettier
"""""""""""""""""""""""""""""
let g:prettier#autoformat=1
let g:prettier#autoformat_require_pragma=0
"""""""""""""""""""""""""""""
" PYTHON RELATED
"""""""""""""""""""""""""""""
" flake8
let g:syntastic_python_checkers=['flake8']
let g:syntastic_python_flake8_args='--config=setup.cfg'
autocmd BufWritePost *.py call flake8#Flake8()

" black
autocmd BufWritePre *.py execute ':Black'

"""""""""""""""""""""""""""""
" JAVASCRIPT RELATED
"""""""""""""""""""""""""""""
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_typescript_checkers = ['eslint']

"""""""""""""""""""""""""""""
" NERDTree
"""""""""""""""""""""""""""""
nmap <C-b> :NERDTreeToggle<CR>
let NERDTreeShowHidden=1
let NERDTreeMinimalUI=1
let NERDTreeDirArrows=1
let NERDTreeAutoDeleteBuffer=1
"""""""""""""""""""""""""""""
" devicons
"""""""""""""""""""""""""""""
let g:WebDevIconsUnicodeDecorateFolderNodes=1
